// Code generated by MockGen. DO NOT EDIT.
// Source: internal/module/account/internal/repository/model/iuuid.go
//
// Generated by this command:
//
//	mockgen -source=internal/module/account/internal/repository/model/iuuid.go -destination=internal/module/account/internal/repository/model/uuid_mock.go -package=model -self_package=awsomeapp/internal/module/account/internal/repository/model
//
// Package model is a generated GoMock package.
package model

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockiUUIDHelper is a mock of iUUIDHelper interface.
type MockiUUIDHelper struct {
	ctrl     *gomock.Controller
	recorder *MockiUUIDHelperMockRecorder
}

// MockiUUIDHelperMockRecorder is the mock recorder for MockiUUIDHelper.
type MockiUUIDHelperMockRecorder struct {
	mock *MockiUUIDHelper
}

// NewMockiUUIDHelper creates a new mock instance.
func NewMockiUUIDHelper(ctrl *gomock.Controller) *MockiUUIDHelper {
	mock := &MockiUUIDHelper{ctrl: ctrl}
	mock.recorder = &MockiUUIDHelperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiUUIDHelper) EXPECT() *MockiUUIDHelperMockRecorder {
	return m.recorder
}

// generate mocks base method.
func (m *MockiUUIDHelper) generate() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "generate")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// generate indicates an expected call of generate.
func (mr *MockiUUIDHelperMockRecorder) generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "generate", reflect.TypeOf((*MockiUUIDHelper)(nil).generate))
}

// toBinary mocks base method.
func (m *MockiUUIDHelper) toBinary(id string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "toBinary", id)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// toBinary indicates an expected call of toBinary.
func (mr *MockiUUIDHelperMockRecorder) toBinary(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "toBinary", reflect.TypeOf((*MockiUUIDHelper)(nil).toBinary), id)
}

// toString mocks base method.
func (m *MockiUUIDHelper) toString(id []byte) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "toString", id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// toString indicates an expected call of toString.
func (mr *MockiUUIDHelperMockRecorder) toString(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "toString", reflect.TypeOf((*MockiUUIDHelper)(nil).toString), id)
}
